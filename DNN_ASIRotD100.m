function [ASI, sigma, phi, tau] = DNN_ASIRotD100(input_Mw,input_Rrup,input_Vs30,input_Frv,input_Fnm)

% Created by Mao-Xin Wang (dr.maoxin.wang@gmail.com or maoxin.wang@polyu.edu.hk)
% December 2023
%
% Predict RotD100 value of ASI
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% INPUT
%
%   input_Mw     = scalar or matrix of inputted moment magnitude
%   input_Rrup   = scalar or matrix of inputted rupture distance
%   input_Vs30   = scalar or matrix of inputted upper 30 m shear-wave velocity
%   input_Frv    = scalar or matrix of inputted reverse-faulting indicator
%   input_Fnm    = scalar or matrix of inputted normal-faulting indicator
%                  (Note: the above inputs must be in the same dimension)
%
% OUTPUT
%
%   ASI          = median acceleration spectrum intensity
%   sigma        = logarithmic total standard deviation
%   phi          = logarithmic within-event standard deviation
%   tau          = logarithmic between-event standard deviation
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% specify model coefficients
X_min = [3.0500 	-1.5606 	4.4922 	0.0000 	0.0000];
X_max = [7.9000 	5.9904 	7.2889 	1.0000 	1.0000];

W1 = [
    -0.3553 	0.2448 	0.5826 	-0.4291 	-0.4408 	0.5562 	2.4496 	-0.0900 	1.3213 	-1.3910 	0.8136 	-0.3417 	0.2153 	0.0238
    0.9189 	-0.9449 	-0.8876 	-1.1780 	0.5607 	-0.7963 	0.5432 	1.0542 	-0.7149 	-0.1984 	-0.5699 	-0.0061 	-0.9282 	0.1576
    0.2918 	0.0510 	-0.0672 	-0.0258 	-1.1651 	-0.5138 	0.0169 	0.1677 	0.0419 	-0.0078 	0.1770 	1.0773 	-0.1968 	0.3627
    -0.4398 	0.3149 	-0.0369 	0.1033 	0.0158 	-0.1472 	0.1197 	0.3510 	0.0906 	0.6418 	-0.4093 	0.1552 	-0.5601 	-0.1723
    0.5536 	1.0580 	-0.2513 	-0.3982 	-0.0427 	-0.3302 	1.0626 	0.1281 	-0.9648 	0.1708 	0.1941 	-0.7893 	0.0652 	0.9985
    ];

b1 = [
    0.0380 	-0.3886 	0.1981 	0.3149 	-0.3029 	0.3976 	-0.5312 	-0.3253 	0.1189 	0.1218 	0.2724 	0.4086 	0.0722 	0.0370
    ];

W2 = [
    0.1830 	-0.0554 	0.3849 	-0.7051 	-0.4550 	-0.5232 	0.6402 	-0.2470 	0.6458 	-0.2566 	0.4480 	-0.4994 	-0.6474 	-0.3239
    -0.6598 	1.5823 	1.2537 	0.0674 	0.0837 	0.7007 	-0.5422 	-0.7111 	0.7407 	-0.0505 	0.1717 	-0.0523 	0.2310 	-0.1598
    -0.0025 	0.8148 	0.2539 	0.7704 	-0.4697 	0.0267 	-0.0986 	0.3061 	-0.2055 	0.3742 	-1.2335 	0.7064 	0.7405 	0.6954
    -1.0311 	-0.2695 	-0.1876 	0.5847 	0.0259 	0.4611 	-1.0279 	1.9775 	-0.1246 	0.8275 	-0.9143 	-0.3380 	0.5879 	0.0624
    -0.1552 	-0.3718 	-0.4190 	-0.1660 	0.1495 	0.9646 	0.7252 	-0.6042 	-0.3705 	1.4330 	-0.1142 	-0.9231 	0.4916 	-0.0430
    0.4067 	0.4297 	-0.1131 	0.3821 	-0.3760 	-0.3756 	-0.0627 	0.5242 	0.2588 	1.1484 	-0.6880 	0.8440 	0.7322 	0.1857
    0.7836 	0.0801 	-0.1148 	-0.5480 	0.1861 	-0.3648 	0.1316 	-0.3334 	1.9597 	-0.2764 	-0.5095 	2.4569 	0.2697 	0.2986
    0.2270 	-0.1716 	-0.7882 	0.0901 	1.3012 	-0.4920 	0.5464 	-0.9615 	-0.2106 	-0.7938 	0.5435 	-0.7017 	-0.3124 	-0.8970
    1.5391 	-0.2484 	-0.6693 	1.1631 	0.0251 	-0.3535 	-0.2460 	0.5428 	-0.3244 	0.5867 	-0.1290 	-0.5305 	0.2947 	0.2909
    -0.8789 	-0.1366 	0.6044 	0.3103 	0.6476 	0.4212 	-0.2162 	0.3448 	-0.3496 	0.3796 	0.0895 	-1.2950 	0.3192 	-0.1823
    0.0995 	-0.4188 	0.6045 	0.2591 	-0.4317 	-0.2507 	0.3060 	0.0665 	1.5182 	-0.1003 	-0.6421 	1.4984 	-0.1191 	-0.2735
    0.0126 	-0.2721 	-0.1604 	0.3146 	-0.0075 	-0.8143 	0.3451 	0.3461 	-1.1095 	0.4878 	0.5128 	-0.1787 	0.0316 	0.3079
    0.0164 	0.4284 	0.7617 	0.2868 	-1.8698 	0.4934 	-0.2935 	0.2607 	0.0239 	0.2275 	-0.1876 	0.1661 	-0.1190 	-0.0584
    -0.5075 	0.4073 	0.4220 	0.1212 	-0.5873 	0.3893 	-0.1160 	-0.2005 	1.0062 	-0.2863 	0.0684 	0.6322 	-0.5189 	-0.1405
    ];

b2 = [
    0.0393 	-0.6232 	-0.2895 	-0.1720 	-0.1385 	-0.7155 	0.4181 	0.2680 	-0.7569 	0.0117 	0.3050 	-0.1218 	-0.2198 	-0.3231
    ];

W3 = [
    0.2298 	-0.3683 	-0.9543 	0.0932 	0.9134 	-0.3244 	0.9970 	-0.5156 	0.5554 	-0.8538 	-0.6530 	-0.2702 	0.1273 	0.9135
    -0.6832 	-0.3273 	-0.3009 	0.3319 	-0.3262 	-0.2632 	-1.0684 	0.6246 	-0.7801 	0.0470 	0.6447 	1.1211 	-0.1040 	-0.2664
    -0.5334 	-0.3141 	0.1900 	0.3917 	-0.7275 	0.3600 	-0.3857 	0.7846 	-1.6270 	0.1079 	1.3982 	0.1598 	0.3207 	-0.5711
    0.0170 	-0.4055 	-0.6625 	0.8415 	0.1761 	1.1560 	-0.5116 	-1.0625 	0.5077 	-0.6700 	-0.2138 	-0.4659 	0.6790 	1.1051
    0.2949 	-0.7711 	0.0098 	-0.6817 	1.5168 	-1.0277 	-0.0509 	0.5380 	1.6731 	-0.7205 	-1.5714 	-0.6062 	0.3698 	-0.3979
    -0.7596 	-0.6786 	-0.1158 	0.5627 	-0.5522 	0.3339 	-0.3861 	0.0228 	-0.5143 	-0.1523 	0.7788 	-0.0166 	0.5303 	0.0828
    0.3620 	0.7977 	0.1197 	-0.7699 	0.0729 	-0.3421 	0.6384 	-0.4576 	-0.4061 	0.4777 	-0.3208 	-0.4865 	-0.6313 	0.1866
    0.4982 	0.0766 	-0.2393 	0.0715 	0.1396 	1.4232 	0.0145 	-2.2067 	0.7570 	-0.0175 	-0.7102 	0.0135 	-0.0585 	0.9146
    -0.7241 	-0.6168 	0.3113 	-0.3854 	-0.2618 	-0.1698 	-1.4429 	0.6273 	-0.6525 	0.2293 	0.1782 	1.7440 	-0.2269 	0.0478
    -0.0989 	-0.2373 	-0.5255 	0.6329 	0.3656 	0.4726 	0.2736 	-1.2735 	0.3797 	-0.0588 	-0.4683 	0.1187 	-0.4343 	0.2312
    0.0993 	0.6602 	0.5669 	-0.1368 	0.2608 	0.3856 	0.3483 	-0.0008 	-0.2705 	0.2786 	-0.0872 	-0.0517 	-0.3784 	0.0568
    -0.9371 	0.2371 	-0.2864 	-0.8824 	0.3799 	-0.4918 	-1.2936 	0.4049 	-0.0492 	-0.7911 	-0.2213 	0.4399 	0.5001 	0.3256
    -0.3479 	0.0305 	0.0189 	0.3935 	-0.3760 	0.1388 	0.1914 	-1.0329 	0.3530 	-0.3898 	-0.5211 	-0.5954 	0.6355 	-0.2054
    -0.0119 	0.0019 	-0.0054 	0.5526 	0.3076 	-0.1904 	-0.4552 	-0.8056 	-0.0638 	-0.0008 	-0.2053 	-0.5084 	0.2626 	0.1638
    ];

b3 = [
    0.6630 	1.2112 	0.3163 	-0.1338 	0.5379 	-0.0179 	0.8779 	-0.4759 	0.1667 	0.1915 	-0.2070 	-0.1381 	-0.4198 	-0.1798
    ];

W_out = [
    -1.0091 	-1.0431 	-1.0554 	0.3236 	-0.7094 	0.6353 	-0.8219 	-0.8836 	-0.6281 	-0.9340 	0.8307 	0.9728 	0.9415 	0.8690
    ]';

b_out = [-0.3978];

%% perform median prediction
[n_row,n_col] = size(input_Mw);
n_data = n_row*n_col;
X_Mw = reshape(input_Mw,n_data,1);
X_lnR = reshape(log(input_Rrup),n_data,1);
X_lnVs30 = reshape(log(input_Vs30),n_data,1);
X_Frv = reshape(input_Frv,n_data,1);
X_Fnm = reshape(input_Fnm,n_data,1);

X_norm = 2*([X_Mw,X_lnR,X_lnVs30,X_Frv,X_Fnm]-repmat(X_min,[n_data,1]))./(repmat(X_max-X_min,[n_data,1]))-1;
Y = tanh(tanh(tanh(X_norm*W1+b1)*W2+b2)*W3+b3)*W_out+b_out;
ASI = reshape(exp(Y),n_row,n_col);

%% estimate standard deviations
Mw1 = 4;  Mw2 = 6.5;
c = [17.193 6.663 -26.624];
phi = 0.644*ones(size(input_Mw));
tau = 1./(c(1)+c(2).*input_Mw.*log(input_Mw)+c(3).*(log(input_Mw)).^2);
tau(input_Mw<Mw1) = 1./(c(1)+c(2).*Mw1.*log(Mw1)+c(3).*(log(Mw1)).^2);
tau(input_Mw>Mw2) = 1./(c(1)+c(2).*Mw2.*log(Mw2)+c(3).*(log(Mw2)).^2);
sigma = (phi.^2+tau.^2).^0.5;
